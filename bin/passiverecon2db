#! /usr/bin/env python

# This file is part of IVRE.
# Copyright 2011 - 2014 Pierre LALET <pierre.lalet@cea.fr>
#
# IVRE is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# IVRE is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with IVRE. If not, see <http://www.gnu.org/licenses/>.

import ivre.db
import ivre.utils
import ivre.passive

def main():
    import sys
    description = ('Update the database from output of the Bro script '
                   '"passiverecon"')
    try:
        import argparse
        parser = argparse.ArgumentParser(description=description)
    except ImportError:
        import optparse
        parser = optparse.OptionParser(description=description)
        parser.parse_args_orig = parser.parse_args
        parser.parse_args = lambda: parser.parse_args_orig()[0]
        parser.add_argument = parser.add_option
    parser.add_argument('--sensor', '-s', help='Sensor name')
    parser.add_argument('--ignore-spec', '-i',
                        help='Filename containing ignore rules')
    args = parser.parse_args()
    ignore_rules = {}
    if args.ignore_spec is not None:
        execfile(args.ignore_spec, ignore_rules)
    for l in sys.stdin:
        if not l or l.startswith('#'):
            continue
        if l.endswith('\n'):
            l = l[:-1]
        try:
            timestamp, spec = ivre.passive.handle_rec(
                args.sensor,
                ignore_rules.get('IGNORENETS', {}),
                ignore_rules.get('NEVERIGNORE', {}),
                *l.split('\t')
            )
            if spec is not None:
                ivre.db.db.passive.insert_or_update(
                    timestamp, spec, getinfos=ivre.passive.getinfos
                )
        except:
            sys.stderr.write("WARNING: cannot parse line [%s]\n" % l)

if __name__ == '__main__':
    main()
